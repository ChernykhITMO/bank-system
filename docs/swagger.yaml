definitions:
  domain.Transaction:
    properties:
      accountId:
        type: string
      action:
        $ref: '#/definitions/enums.TransactionType'
      amount:
        type: number
      id:
        type: string
    type: object
  dto.CreateAccountRequest:
    properties:
      login:
        type: string
    required:
    - login
    type: object
  dto.CreateUserRequest:
    properties:
      hair_color:
        type: string
      login:
        type: string
      name:
        type: string
      sex:
        type: string
    required:
    - hair_color
    - login
    - name
    - sex
    type: object
  dto.DeleteAccountRequest:
    properties:
      id:
        type: string
      login:
        type: string
    required:
    - id
    - login
    type: object
  dto.DepWithRequest:
    properties:
      amount:
        type: number
      id:
        type: string
    required:
    - amount
    - id
    type: object
  dto.FriendsRequest:
    properties:
      friend_login:
        type: string
      user_login:
        type: string
    required:
    - friend_login
    - user_login
    type: object
  dto.TransferRequest:
    properties:
      amount:
        type: number
      id1:
        type: string
      id2:
        type: string
    required:
    - amount
    - id1
    - id2
    type: object
  enums.TransactionType:
    enum:
    - deposit
    - withdraw
    - transfer
    type: string
    x-enum-varnames:
    - TransactionDeposit
    - TransactionWithdraw
    - TransactionTransfer
host: localhost:8080
info:
  contact: {}
  description: This is a simple banking API for practice
  title: Bank System API
  version: "1.0"
paths:
  /account/balance:
    get:
      consumes:
      - application/json
      description: Get balance from account
      parameters:
      - description: Id acccount
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get balance
      tags:
      - Account
  /account/create:
    post:
      consumes:
      - application/json
      description: Create new account for user
      parameters:
      - description: Account to create
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/dto.CreateAccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Create account
      tags:
      - Account
  /account/delete:
    delete:
      consumes:
      - application/json
      description: Delete account
      parameters:
      - description: Deleted
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/dto.DeleteAccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Delete
      tags:
      - Account
  /account/deposit:
    post:
      consumes:
      - application/json
      description: Deposit account
      parameters:
      - description: Deposited
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/dto.DepWithRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Deposit
      tags:
      - Account
  /account/transactions:
    get:
      consumes:
      - application/json
      description: Get all transactions for account
      parameters:
      - description: Account ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Transaction'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Transactions
      tags:
      - Account
  /account/transfer:
    post:
      consumes:
      - application/json
      description: Transfer account
      parameters:
      - description: Transfered
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/dto.TransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Transfer
      tags:
      - Account
  /account/withdraw:
    post:
      consumes:
      - application/json
      description: Withdraw account
      parameters:
      - description: Deposited
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/dto.DepWithRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Withdraw
      tags:
      - Account
  /user/add_friend:
    post:
      consumes:
      - application/json
      description: Add a friend using user login and friend login
      parameters:
      - description: Friendship info
        in: body
        name: friendship
        required: true
        schema:
          $ref: '#/definitions/dto.FriendsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
      summary: Add friend
      tags:
      - User
  /user/create:
    post:
      consumes:
      - application/json
      description: Create a new user with login, name, sex and hair color
      parameters:
      - description: User to create
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Create new user
      tags:
      - User
  /user/delete:
    delete:
      consumes:
      - application/json
      description: Delete user
      parameters:
      - description: User deleted
        in: query
        name: login
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Delete user
      tags:
      - User
  /user/get_user:
    get:
      consumes:
      - application/json
      description: Get user
      parameters:
      - description: User login
        in: query
        name: login
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get user
      tags:
      - User
  /user/remove_friend:
    post:
      consumes:
      - application/json
      description: Delete user's friend
      parameters:
      - description: Friendship info
        in: body
        name: friendship
        required: true
        schema:
          $ref: '#/definitions/dto.FriendsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Delete user's friend
      tags:
      - User
swagger: "2.0"
